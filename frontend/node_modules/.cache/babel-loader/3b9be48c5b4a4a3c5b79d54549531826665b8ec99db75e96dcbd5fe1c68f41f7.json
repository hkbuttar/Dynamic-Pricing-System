{"ast":null,"code":"var _jsxFileName = \"/workspaces/Dynamic-Pricing-System/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst Dashboard = styled.div`\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n`;\n_c = Dashboard;\nconst Header = styled.h1`\n  color: #2c3e50;\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 2.5rem;\n`;\n_c2 = Header;\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n_c3 = StatsGrid;\nconst StatCard = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  text-align: center;\n`;\n_c4 = StatCard;\nconst StatValue = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: #3498db;\n  margin-bottom: 5px;\n`;\n_c5 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: #7f8c8d;\n`;\n_c6 = StatLabel;\nconst ChartGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n_c7 = ChartGrid;\nconst ChartCard = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n`;\n_c8 = ChartCard;\nconst ChartTitle = styled.h3`\n  color: #2c3e50;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n_c9 = ChartTitle;\nconst ProductTable = styled.table`\n  width: 100%;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  border-collapse: collapse;\n  overflow: hidden;\n`;\n_c0 = ProductTable;\nconst TableHeader = styled.th`\n  background: #3498db;\n  color: white;\n  padding: 15px;\n  text-align: left;\n`;\n_c1 = TableHeader;\nconst TableCell = styled.td`\n  padding: 12px 15px;\n  border-bottom: 1px solid #ecf0f1;\n`;\n_c10 = TableCell;\nconst TableRow = styled.tr`\n  &:hover {\n    background-color: #f8f9fa;\n  }\n`;\n_c11 = TableRow;\nconst PriceChange = styled.span`\n  font-weight: bold;\n  color: ${props => props.positive ? '#27ae60' : '#e74c3c'};\n`;\n_c12 = PriceChange;\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  font-size: 1.2rem;\n  color: #7f8c8d;\n`;\n_c13 = LoadingSpinner;\nconst RefreshButton = styled.button`\n  background: #3498db;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 6px;\n  font-size: 1rem;\n  cursor: pointer;\n  margin-right: 10px;\n  \n  &:hover {\n    background: #2980b9;\n  }\n  \n  &:disabled {\n    background: #bdc3c7;\n    cursor: not-allowed;\n  }\n`;\n_c14 = RefreshButton;\nconst COLORS = ['#3498db', '#e74c3c', '#f39c12', '#27ae60', '#9b59b6'];\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [competitorData, setCompetitorData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [stats, setStats] = useState({});\n  const [connectionStatus, setConnectionStatus] = useState(\"unknown\");\n  const testConnection = async () => {\n    console.log(\"🧪 Testing connection to backend...\");\n    console.log(\"API_BASE URL:\", API_BASE);\n    try {\n      const response = await axios.get(`${API_BASE}/api/health`, {\n        timeout: 5000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"✅ Connection test successful:\", response.data);\n      console.log(\"Response status:\", response.status);\n      console.log(\"Response headers:\", response.headers);\n      setConnectionStatus(\"connected\");\n      alert(`✅ Backend connection successful!\\n\\nStatus: ${response.data.status}\\nAPI URL: ${API_BASE}`);\n    } catch (error) {\n      var _error$response, _error$response2, _error$config, _error$response3;\n      console.error(\"❌ Connection test failed:\", error);\n      console.error(\"Error details:\", {\n        message: error.message,\n        code: error.code,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n        url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url\n      });\n      setConnectionStatus(\"failed\");\n      let errorMessage = `Connection failed to ${API_BASE}`;\n      if (error.code === 'ECONNREFUSED') {\n        errorMessage += \"\\n\\n❌ Connection refused - Backend server is not running\";\n      } else if (error.code === 'ETIMEDOUT') {\n        errorMessage += \"\\n\\n⏰ Connection timed out - Backend server may be slow or unresponsive\";\n      } else if (error.message.includes('Network Error')) {\n        errorMessage += \"\\n\\n🌐 Network error - Check if backend server is accessible\";\n      } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n        errorMessage += \"\\n\\n❌ 404 Not Found - API endpoint doesn't exist\";\n      } else {\n        errorMessage += `\\n\\n${error.message}`;\n      }\n      errorMessage += \"\\n\\nTroubleshooting:\\n1. Make sure backend is running: python run.py\\n2. Check backend is on port 5000\\n3. Verify no firewall blocking connection\";\n      alert(errorMessage);\n    }\n  };\n  const fetchData = async () => {\n    setLoading(true);\n    console.log(\"🔄 Starting data fetch...\");\n    console.log(\"API_BASE:\", API_BASE);\n    try {\n      // Test backend connection first\n      console.log(\"Testing backend connection...\");\n      const healthCheck = await axios.get(`${API_BASE}/api/health`, {\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"✅ Health check successful:\", healthCheck.data);\n      console.log(\"Fetching products and competitor data...\");\n      const [productsRes, competitorRes] = await Promise.all([axios.get(`${API_BASE}/api/products`, {\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }), axios.get(`${API_BASE}/api/competitor-prices`, {\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })]);\n      console.log(\"✅ Products data received:\", productsRes.data.length, \"products\");\n      console.log(\"✅ Competitor data received:\", competitorRes.data.length, \"competitors\");\n      setProducts(productsRes.data);\n      setCompetitorData(competitorRes.data);\n      calculateStats(productsRes.data);\n      setConnectionStatus(\"connected\");\n      console.log(\"✅ Data fetch completed successfully!\");\n    } catch (error) {\n      var _error$response4, _error$response5, _error$config2, _error$response6, _error$response7, _error$response9, _error$response9$data;\n      console.error(\"❌ Detailed error:\", error);\n      console.error(\"Error message:\", error.message);\n      console.error(\"Error code:\", error.code);\n      console.error(\"Error response:\", (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n      console.error(\"Error status:\", (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status);\n      console.error(\"Error config URL:\", (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url);\n      setConnectionStatus(\"failed\");\n      let errorMessage = \"Unknown error occurred\";\n      if (error.code === 'ECONNREFUSED' || error.message.includes('Network Error')) {\n        errorMessage = \"Cannot connect to backend server. Make sure backend is running on port 5000.\";\n      } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n        var _error$config3;\n        errorMessage = `API endpoint not found: ${(_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.url}`;\n      } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) >= 500) {\n        var _error$response8, _error$response8$data;\n        errorMessage = `Server error: ${((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || error.message}`;\n      } else if ((_error$response9 = error.response) !== null && _error$response9 !== void 0 && (_error$response9$data = _error$response9.data) !== null && _error$response9$data !== void 0 && _error$response9$data.error) {\n        errorMessage = error.response.data.error;\n      } else {\n        errorMessage = error.message;\n      }\n      alert(`❌ Error fetching data: ${errorMessage}\\n\\nCheck browser console (F12) for detailed logs.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculateStats = productData => {\n    const totalProducts = productData.length;\n    const avgPriceIncrease = productData.reduce((sum, p) => sum + p.price_change_percent, 0) / totalProducts;\n    const totalRevenueImpact = productData.reduce((sum, p) => sum + (p.revenue_impact || 0), 0);\n    const highInventoryCount = productData.filter(p => p.inventory > 50).length;\n    setStats({\n      totalProducts,\n      avgPriceIncrease: avgPriceIncrease.toFixed(2),\n      totalRevenueImpact: totalRevenueImpact.toFixed(0),\n      highInventoryCount\n    });\n  };\n  useEffect(() => {\n    console.log(\"🚀 Component mounted, fetching initial data...\");\n    fetchData();\n  }, []);\n  const prepareChartData = () => {\n    return products.map(p => ({\n      name: p.product_id,\n      basePrice: p.base_price,\n      adjustedPrice: p.adjusted_price,\n      priceChange: p.price_change_percent,\n      inventory: p.inventory,\n      sales: p.sales_last_30_days,\n      rating: p.average_rating\n    }));\n  };\n  const prepareCategoryData = () => {\n    const categoryStats = {};\n    products.forEach(p => {\n      if (!categoryStats[p.category]) {\n        categoryStats[p.category] = {\n          count: 0,\n          totalRevenue: 0\n        };\n      }\n      categoryStats[p.category].count++;\n      categoryStats[p.category].totalRevenue += p.revenue_impact || 0;\n    });\n    return Object.entries(categoryStats).map(([category, data]) => ({\n      name: category,\n      count: data.count,\n      revenue: data.totalRevenue.toFixed(0)\n    }));\n  };\n  const prepareCompetitorComparisonData = () => {\n    return products.map(p => {\n      const competitor = competitorData.find(c => c.product_id === p.product_id);\n      return {\n        name: p.product_id,\n        ourPrice: p.adjusted_price,\n        competitorPrice: (competitor === null || competitor === void 0 ? void 0 : competitor.competitor_price) || 0,\n        advantage: competitor ? ((competitor.competitor_price - p.adjusted_price) / p.adjusted_price * 100).toFixed(1) : 0\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Dynamic Pricing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n        onClick: fetchData,\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RefreshButton, {\n        onClick: testConnection,\n        style: {\n          background: \"#27ae60\"\n        },\n        children: \"Test Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"8px 16px\",\n          borderRadius: \"4px\",\n          fontSize: \"14px\",\n          background: connectionStatus === \"connected\" ? \"#d4edda\" : connectionStatus === \"failed\" ? \"#f8d7da\" : \"#e2e3e5\",\n          color: connectionStatus === \"connected\" ? \"#155724\" : connectionStatus === \"failed\" ? \"#721c24\" : \"#383d41\",\n          border: `1px solid ${connectionStatus === \"connected\" ? \"#c3e6cb\" : connectionStatus === \"failed\" ? \"#f5c6cb\" : \"#ced4da\"}`\n        },\n        children: [\"Backend: \", connectionStatus === \"connected\" ? \"✅ Connected\" : connectionStatus === \"failed\" ? \"❌ Disconnected\" : \"❓ Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      children: \"Loading pricing data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatsGrid, {\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: stats.totalProducts || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Total Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: [stats.avgPriceIncrease || 0, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Avg Price Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: [\"$\", stats.totalRevenueImpact || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Revenue Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: stats.highInventoryCount || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"High Inventory Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ChartGrid, {\n          children: [/*#__PURE__*/_jsxDEV(ChartCard, {\n            children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n              children: \"Price Adjustments by Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: prepareChartData(),\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"basePrice\",\n                  fill: \"#95a5a6\",\n                  name: \"Base Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"adjustedPrice\",\n                  fill: \"#3498db\",\n                  name: \"Adjusted Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n              children: \"Category Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: prepareCategoryData(),\n                  cx: \"50%\",\n                  cy: \"50%\",\n                  labelLine: false,\n                  label: ({\n                    name,\n                    count\n                  }) => `${name} (${count})`,\n                  outerRadius: 100,\n                  fill: \"#8884d8\",\n                  dataKey: \"count\",\n                  children: prepareCategoryData().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n          children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n            children: \"Product Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Product ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Base Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Adjusted Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Change %\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Inventory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Sales (30d)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Revenue Impact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n                  children: \"Rule Applied\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: products.map(product => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.product_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"$\", product.base_price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"$\", product.adjusted_price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(PriceChange, {\n                    positive: product.price_change_percent > 0,\n                    children: [product.price_change_percent > 0 ? '+' : '', product.price_change_percent, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.inventory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.sales_last_30_days\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.average_rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(PriceChange, {\n                    positive: product.revenue_impact > 0,\n                    children: [\"$\", product.revenue_impact]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.rule_applied\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 25\n                }, this)]\n              }, product.product_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"40px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click \\\"Test Connection\\\" to check backend connectivity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"70Q4z6xuE19XJD9T67KANYHrxpo=\");\n_c15 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"StatsGrid\");\n$RefreshReg$(_c4, \"StatCard\");\n$RefreshReg$(_c5, \"StatValue\");\n$RefreshReg$(_c6, \"StatLabel\");\n$RefreshReg$(_c7, \"ChartGrid\");\n$RefreshReg$(_c8, \"ChartCard\");\n$RefreshReg$(_c9, \"ChartTitle\");\n$RefreshReg$(_c0, \"ProductTable\");\n$RefreshReg$(_c1, \"TableHeader\");\n$RefreshReg$(_c10, \"TableCell\");\n$RefreshReg$(_c11, \"TableRow\");\n$RefreshReg$(_c12, \"PriceChange\");\n$RefreshReg$(_c13, \"LoadingSpinner\");\n$RefreshReg$(_c14, \"RefreshButton\");\n$RefreshReg$(_c15, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","PieChart","Pie","Cell","ResponsiveContainer","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_URL","Dashboard","div","_c","Header","h1","_c2","StatsGrid","_c3","StatCard","_c4","StatValue","_c5","StatLabel","_c6","ChartGrid","_c7","ChartCard","_c8","ChartTitle","h3","_c9","ProductTable","table","_c0","TableHeader","th","_c1","TableCell","td","_c10","TableRow","tr","_c11","PriceChange","span","props","positive","_c12","LoadingSpinner","_c13","RefreshButton","button","_c14","COLORS","App","_s","products","setProducts","competitorData","setCompetitorData","loading","setLoading","stats","setStats","connectionStatus","setConnectionStatus","testConnection","console","log","response","get","timeout","headers","data","status","alert","error","_error$response","_error$response2","_error$config","_error$response3","message","code","statusText","url","config","errorMessage","includes","fetchData","healthCheck","productsRes","competitorRes","Promise","all","length","calculateStats","_error$response4","_error$response5","_error$config2","_error$response6","_error$response7","_error$response9","_error$response9$data","_error$config3","_error$response8","_error$response8$data","productData","totalProducts","avgPriceIncrease","reduce","sum","p","price_change_percent","totalRevenueImpact","revenue_impact","highInventoryCount","filter","inventory","toFixed","prepareChartData","map","name","product_id","basePrice","base_price","adjustedPrice","adjusted_price","priceChange","sales","sales_last_30_days","rating","average_rating","prepareCategoryData","categoryStats","forEach","category","count","totalRevenue","Object","entries","revenue","prepareCompetitorComparisonData","competitor","find","c","ourPrice","competitorPrice","competitor_price","advantage","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","display","gap","alignItems","onClick","disabled","background","padding","borderRadius","fontSize","color","border","width","height","strokeDasharray","dataKey","fill","cx","cy","labelLine","label","outerRadius","entry","index","product","rule_applied","textAlign","_c15","$RefreshReg$"],"sources":["/workspaces/Dynamic-Pricing-System/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer\n} from \"recharts\";\nimport styled from \"styled-components\";\n\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\nconst Dashboard = styled.div`\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n`;\n\nconst Header = styled.h1`\n  color: #2c3e50;\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 2.5rem;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n\nconst StatCard = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  text-align: center;\n`;\n\nconst StatValue = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: #3498db;\n  margin-bottom: 5px;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: #7f8c8d;\n`;\n\nconst ChartGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n\nconst ChartCard = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n`;\n\nconst ChartTitle = styled.h3`\n  color: #2c3e50;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst ProductTable = styled.table`\n  width: 100%;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  border-collapse: collapse;\n  overflow: hidden;\n`;\n\nconst TableHeader = styled.th`\n  background: #3498db;\n  color: white;\n  padding: 15px;\n  text-align: left;\n`;\n\nconst TableCell = styled.td`\n  padding: 12px 15px;\n  border-bottom: 1px solid #ecf0f1;\n`;\n\nconst TableRow = styled.tr`\n  &:hover {\n    background-color: #f8f9fa;\n  }\n`;\n\nconst PriceChange = styled.span`\n  font-weight: bold;\n  color: ${props => props.positive ? '#27ae60' : '#e74c3c'};\n`;\n\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  font-size: 1.2rem;\n  color: #7f8c8d;\n`;\n\nconst RefreshButton = styled.button`\n  background: #3498db;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 6px;\n  font-size: 1rem;\n  cursor: pointer;\n  margin-right: 10px;\n  \n  &:hover {\n    background: #2980b9;\n  }\n  \n  &:disabled {\n    background: #bdc3c7;\n    cursor: not-allowed;\n  }\n`;\n\nconst COLORS = ['#3498db', '#e74c3c', '#f39c12', '#27ae60', '#9b59b6'];\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [competitorData, setCompetitorData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [stats, setStats] = useState({});\n  const [connectionStatus, setConnectionStatus] = useState(\"unknown\");\n\n  const testConnection = async () => {\n    console.log(\"🧪 Testing connection to backend...\");\n    console.log(\"API_BASE URL:\", API_BASE);\n    \n    try {\n      const response = await axios.get(`${API_BASE}/api/health`, {\n        timeout: 5000,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      console.log(\"✅ Connection test successful:\", response.data);\n      console.log(\"Response status:\", response.status);\n      console.log(\"Response headers:\", response.headers);\n      \n      setConnectionStatus(\"connected\");\n      alert(`✅ Backend connection successful!\\n\\nStatus: ${response.data.status}\\nAPI URL: ${API_BASE}`);\n    } catch (error) {\n      console.error(\"❌ Connection test failed:\", error);\n      console.error(\"Error details:\", {\n        message: error.message,\n        code: error.code,\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        url: error.config?.url\n      });\n      \n      setConnectionStatus(\"failed\");\n      \n      let errorMessage = `Connection failed to ${API_BASE}`;\n      \n      if (error.code === 'ECONNREFUSED') {\n        errorMessage += \"\\n\\n❌ Connection refused - Backend server is not running\";\n      } else if (error.code === 'ETIMEDOUT') {\n        errorMessage += \"\\n\\n⏰ Connection timed out - Backend server may be slow or unresponsive\";\n      } else if (error.message.includes('Network Error')) {\n        errorMessage += \"\\n\\n🌐 Network error - Check if backend server is accessible\";\n      } else if (error.response?.status === 404) {\n        errorMessage += \"\\n\\n❌ 404 Not Found - API endpoint doesn't exist\";\n      } else {\n        errorMessage += `\\n\\n${error.message}`;\n      }\n      \n      errorMessage += \"\\n\\nTroubleshooting:\\n1. Make sure backend is running: python run.py\\n2. Check backend is on port 5000\\n3. Verify no firewall blocking connection\";\n      \n      alert(errorMessage);\n    }\n  };\n\n  const fetchData = async () => {\n    setLoading(true);\n    console.log(\"🔄 Starting data fetch...\");\n    console.log(\"API_BASE:\", API_BASE);\n    \n    try {\n      // Test backend connection first\n      console.log(\"Testing backend connection...\");\n      const healthCheck = await axios.get(`${API_BASE}/api/health`, {\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      console.log(\"✅ Health check successful:\", healthCheck.data);\n      \n      console.log(\"Fetching products and competitor data...\");\n      const [productsRes, competitorRes] = await Promise.all([\n        axios.get(`${API_BASE}/api/products`, {\n          timeout: 10000,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }),\n        axios.get(`${API_BASE}/api/competitor-prices`, {\n          timeout: 10000,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        })\n      ]);\n      \n      console.log(\"✅ Products data received:\", productsRes.data.length, \"products\");\n      console.log(\"✅ Competitor data received:\", competitorRes.data.length, \"competitors\");\n      \n      setProducts(productsRes.data);\n      setCompetitorData(competitorRes.data);\n      calculateStats(productsRes.data);\n      setConnectionStatus(\"connected\");\n      \n      console.log(\"✅ Data fetch completed successfully!\");\n    } catch (error) {\n      console.error(\"❌ Detailed error:\", error);\n      console.error(\"Error message:\", error.message);\n      console.error(\"Error code:\", error.code);\n      console.error(\"Error response:\", error.response?.data);\n      console.error(\"Error status:\", error.response?.status);\n      console.error(\"Error config URL:\", error.config?.url);\n      \n      setConnectionStatus(\"failed\");\n      \n      let errorMessage = \"Unknown error occurred\";\n      \n      if (error.code === 'ECONNREFUSED' || error.message.includes('Network Error')) {\n        errorMessage = \"Cannot connect to backend server. Make sure backend is running on port 5000.\";\n      } else if (error.response?.status === 404) {\n        errorMessage = `API endpoint not found: ${error.config?.url}`;\n      } else if (error.response?.status >= 500) {\n        errorMessage = `Server error: ${error.response?.data?.error || error.message}`;\n      } else if (error.response?.data?.error) {\n        errorMessage = error.response.data.error;\n      } else {\n        errorMessage = error.message;\n      }\n      \n      alert(`❌ Error fetching data: ${errorMessage}\\n\\nCheck browser console (F12) for detailed logs.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateStats = (productData) => {\n    const totalProducts = productData.length;\n    const avgPriceIncrease = productData.reduce((sum, p) => sum + p.price_change_percent, 0) / totalProducts;\n    const totalRevenueImpact = productData.reduce((sum, p) => sum + (p.revenue_impact || 0), 0);\n    const highInventoryCount = productData.filter(p => p.inventory > 50).length;\n    \n    setStats({\n      totalProducts,\n      avgPriceIncrease: avgPriceIncrease.toFixed(2),\n      totalRevenueImpact: totalRevenueImpact.toFixed(0),\n      highInventoryCount\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"🚀 Component mounted, fetching initial data...\");\n    fetchData();\n  }, []);\n\n  const prepareChartData = () => {\n    return products.map(p => ({\n      name: p.product_id,\n      basePrice: p.base_price,\n      adjustedPrice: p.adjusted_price,\n      priceChange: p.price_change_percent,\n      inventory: p.inventory,\n      sales: p.sales_last_30_days,\n      rating: p.average_rating\n    }));\n  };\n\n  const prepareCategoryData = () => {\n    const categoryStats = {};\n    products.forEach(p => {\n      if (!categoryStats[p.category]) {\n        categoryStats[p.category] = { count: 0, totalRevenue: 0 };\n      }\n      categoryStats[p.category].count++;\n      categoryStats[p.category].totalRevenue += p.revenue_impact || 0;\n    });\n    \n    return Object.entries(categoryStats).map(([category, data]) => ({\n      name: category,\n      count: data.count,\n      revenue: data.totalRevenue.toFixed(0)\n    }));\n  };\n\n  const prepareCompetitorComparisonData = () => {\n    return products.map(p => {\n      const competitor = competitorData.find(c => c.product_id === p.product_id);\n      return {\n        name: p.product_id,\n        ourPrice: p.adjusted_price,\n        competitorPrice: competitor?.competitor_price || 0,\n        advantage: competitor ? ((competitor.competitor_price - p.adjusted_price) / p.adjusted_price * 100).toFixed(1) : 0\n      };\n    });\n  };\n\n  return (\n    <Dashboard>\n      <Header>Dynamic Pricing Dashboard</Header>\n      \n      <div style={{ marginBottom: \"20px\", display: \"flex\", gap: \"10px\", alignItems: \"center\" }}>\n        <RefreshButton onClick={fetchData} disabled={loading}>\n          {loading ? \"Loading...\" : \"Refresh Data\"}\n        </RefreshButton>\n        \n        <RefreshButton onClick={testConnection} style={{ background: \"#27ae60\" }}>\n          Test Connection\n        </RefreshButton>\n        \n        <div style={{ \n          padding: \"8px 16px\", \n          borderRadius: \"4px\", \n          fontSize: \"14px\",\n          background: connectionStatus === \"connected\" ? \"#d4edda\" : \n                     connectionStatus === \"failed\" ? \"#f8d7da\" : \"#e2e3e5\",\n          color: connectionStatus === \"connected\" ? \"#155724\" : \n                 connectionStatus === \"failed\" ? \"#721c24\" : \"#383d41\",\n          border: `1px solid ${connectionStatus === \"connected\" ? \"#c3e6cb\" : \n                                connectionStatus === \"failed\" ? \"#f5c6cb\" : \"#ced4da\"}`\n        }}>\n          Backend: {connectionStatus === \"connected\" ? \"✅ Connected\" : \n                   connectionStatus === \"failed\" ? \"❌ Disconnected\" : \"❓ Unknown\"}\n        </div>\n      </div>\n\n      {loading ? (\n        <LoadingSpinner>Loading pricing data...</LoadingSpinner>\n      ) : (\n        <>\n          <StatsGrid>\n            <StatCard>\n              <StatValue>{stats.totalProducts || 0}</StatValue>\n              <StatLabel>Total Products</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>{stats.avgPriceIncrease || 0}%</StatValue>\n              <StatLabel>Avg Price Change</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>${stats.totalRevenueImpact || 0}</StatValue>\n              <StatLabel>Revenue Impact</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>{stats.highInventoryCount || 0}</StatValue>\n              <StatLabel>High Inventory Items</StatLabel>\n            </StatCard>\n          </StatsGrid>\n\n          {products.length > 0 ? (\n            <>\n              <ChartGrid>\n                <ChartCard>\n                  <ChartTitle>Price Adjustments by Product</ChartTitle>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={prepareChartData()}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Bar dataKey=\"basePrice\" fill=\"#95a5a6\" name=\"Base Price\" />\n                      <Bar dataKey=\"adjustedPrice\" fill=\"#3498db\" name=\"Adjusted Price\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </ChartCard>\n\n                <ChartCard>\n                  <ChartTitle>Category Distribution</ChartTitle>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <PieChart>\n                      <Pie\n                        data={prepareCategoryData()}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        label={({ name, count }) => `${name} (${count})`}\n                        outerRadius={100}\n                        fill=\"#8884d8\"\n                        dataKey=\"count\"\n                      >\n                        {prepareCategoryData().map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </ChartCard>\n              </ChartGrid>\n\n              <ChartCard>\n                <ChartTitle>Product Details</ChartTitle>\n                <ProductTable>\n                  <thead>\n                    <tr>\n                      <TableHeader>Product ID</TableHeader>\n                      <TableHeader>Category</TableHeader>\n                      <TableHeader>Base Price</TableHeader>\n                      <TableHeader>Adjusted Price</TableHeader>\n                      <TableHeader>Change %</TableHeader>\n                      <TableHeader>Inventory</TableHeader>\n                      <TableHeader>Sales (30d)</TableHeader>\n                      <TableHeader>Rating</TableHeader>\n                      <TableHeader>Revenue Impact</TableHeader>\n                      <TableHeader>Rule Applied</TableHeader>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {products.map((product) => (\n                      <TableRow key={product.product_id}>\n                        <TableCell>{product.product_id}</TableCell>\n                        <TableCell>{product.category}</TableCell>\n                        <TableCell>${product.base_price}</TableCell>\n                        <TableCell>${product.adjusted_price}</TableCell>\n                        <TableCell>\n                          <PriceChange positive={product.price_change_percent > 0}>\n                            {product.price_change_percent > 0 ? '+' : ''}{product.price_change_percent}%\n                          </PriceChange>\n                        </TableCell>\n                        <TableCell>{product.inventory}</TableCell>\n                        <TableCell>{product.sales_last_30_days}</TableCell>\n                        <TableCell>{product.average_rating}</TableCell>\n                        <TableCell>\n                          <PriceChange positive={product.revenue_impact > 0}>\n                            ${product.revenue_impact}\n                          </PriceChange>\n                        </TableCell>\n                        <TableCell>{product.rule_applied}</TableCell>\n                      </TableRow>\n                    ))}\n                  </tbody>\n                </ProductTable>\n              </ChartCard>\n            </>\n          ) : (\n            <div style={{ textAlign: \"center\", padding: \"40px\" }}>\n              <h3>No data available</h3>\n              <p>Click \"Test Connection\" to check backend connectivity</p>\n            </div>\n          )}\n        </>\n      )}\n    </Dashboard>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}